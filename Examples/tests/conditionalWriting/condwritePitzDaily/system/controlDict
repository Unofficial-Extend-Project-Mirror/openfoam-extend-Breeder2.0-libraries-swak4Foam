/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     simpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          1;

writeControl    timeStep;

writeInterval   5000;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

libs (
    "libsimpleFunctionObjects.so"
    "libsimpleSwakFunctionObjects.so"
    "libswakFunctionObjects.so"
    "libincompressibleTurbulenceModel.so"
    "libincompressibleRASModels.so"
);

functions {
    nowTimeField {
        type expressionField;
        autowrite true;
        expression "time()";
        outputControl timeStep;
        outputInterval 1;
        fieldName nowTime;
    }
    writeLargeU {
        //        type writeIfFieldOutside;
        type writeIfSwakExpression;

        outputControlMode timeStep;
        outputInterval 1;

        writeControlMode timesteps;
        // cooldownMode timesteps;
        //        writeControlMode untilSwitch;
        //        writeControlMode always;
        //        writeControlMode intervall;
        cooldownMode timesteps;
        //        cooldownMode no;
        //        cooldownMode retrigger;
        //        cooldownMode intervall;

        //        storeAndWritePreviousState false;
        storeAndWritePreviousState true;
        numberOfTimestepsToStore 3;

        writeTimesteps 3;
        cooldownTimesteps 17;
        writeIntervall 2.5;
        cooldownIntervall 16.5;

        fieldName U;
        minimum -1;
        maximum 10;

        variables (
            "count=(mag(U.x)>10) ? count+1 : count;"
            "count=max(count);"
        );

        storedVariables (
            {
                name count;
                initialValue "0";
            }
        );

        valueType internalField;
        writeCondition "mag(U.x)>10 && count<4";
        writeConditionAccumulation or;

        stopWritingCondition "(time() % 10)==5";
        stopWritingConditionAccumulation and;

        retriggerCondition "(time() % 20)==0";
        retriggerConditionAccumulation or;
    }
}

// ************************************************************************* //
