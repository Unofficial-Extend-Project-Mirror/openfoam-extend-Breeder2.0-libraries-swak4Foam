/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         1;

deltaT          0.001;

writeControl    adjustableRunTime;

writeInterval   0.05;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           1;
maxAlphaCo      1;

maxDeltaT       1;

libs (
    "libswakTopoSources.so"
    "libsimpleSwakFunctionObjects.so"
    "libsimpleFunctionObjects.so"
    "libswakFunctionObjects.so"
);

functions {
    getTheSets {
        type loadTopoSets;
        //        region nix;
        forceLoading true;
        loadCellSets true;
        loadFaceSets true;
        loadPointSets false;
        writeSets true;
    }
    getTheSetsAgain {
        // Just checking how reloading works

        type loadTopoSets;
        //        region nix;
        forceLoading false;
        loadCellSets true;
        loadFaceSets true;
        loadPointSets false;
        writeSets true;
    }
    middleLiquid {
        type swakExpression;
        valueType faceSet;
        setName middleFaces;
        aliases {
            aWater alpha.water;
        }
        verbose true;
        expression "aWater";
        accumulations (
            min
            weightedAverage
            max
        );
        autoInterpolate true;
        warnAutoInterpolate false;
        // debugCommonDriver 2;
    }
    undecidedCells {
        type manipulateCellSet;
        cellSetName undecided;
        aliases {
            aWater alpha.water;
        }
        mask "0.1<aWater && aWater<0.9";
        createMissing true;
    }
    undecidedVelocity {
        $middleLiquid;
        valueType cellSet;
        setName undecided;
        expression "mag(U)";
        accumulations (
            size
            weightedAverage
            max
        );
    }
}

// ************************************************************************* //
